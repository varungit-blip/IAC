# -*- coding: utf-8 -*-
"""IAC (Q10-Q18).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17xox0Lv8mtZfCHQDMYEynwMeM41r9KHD
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_excel('DAD.xlsx')

"""Q11)HOW DOES THE EXCEPETED SALARY VARY BASED ON FACTORS LIKE CGPA,FAMILY INCOME,EXPERIENCE WITH PYTHON?

"""

plt.figure(figsize=(8, 6))
sns.boxplot(x='CGPA', y='Expected salary (Lac)', data=df)
plt.xlabel('CGPA')
plt.ylabel('Expected salary (Lac)')
plt.title('Relationship between CGPA and Expected salary (Lac) using Box Plot')
plt.xticks(rotation=90)
plt.show()

plt.figure(figsize=(8,4))
sns.boxplot(x='Family Income', y='Expected salary (Lac)', data=df)
plt.xlabel('Family Income')
plt.ylabel('Expected salary (Lac)')
plt.title('Relationship between Family Income and Expected salary (Lac) using Box Plot')
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(8,4))
sns.lineplot(x='Experience with python (Months)', y='Expected salary (Lac)', data=df)
plt.xlabel('Experience with python (Months)')
plt.ylabel('Expected salary (Lac)')
plt.title('Relationship between Experience with python (Months) and Expected salary (Lac) using Line Plot')
plt.show()

"""12)which event tend to attract more students ffrom specific field of study?"""

most_common_values = df['Events'].value_counts()


N =5
print(f"Top {N} most common values in the Events column:")
print(most_common_values.head(N))

"""14) HOW MANY STUDENTS ARE GRADUATING BY THE END OF 2024?"""

graduation_dates = df['Year of Graduation']

graduation_dates = pd.to_datetime(graduation_dates, errors='coerce')
end_of_2024 = pd.to_datetime('2024')
graduating_by_2024 = df[graduation_dates <= end_of_2024]

num_students_graduating_by_2024 = len(graduating_by_2024)
print(f"Number of students graduating by the end of 2024: {num_students_graduating_by_2024}")

"""15)WHICH PROMOTION CHANNEL BRINGS IN MORE STUDENT PARTICIPATIONS FOR THE EVENT?

"""

channel_participation = df.groupby('Events')['Quantity'].sum().reset_index()
channel_participation = channel_participation.sort_values(by='Quantity', ascending=False)

plt.figure(figsize=(10, 6))
plt.bar(channel_participation['Events'], channel_participation['Quantity'])
plt.xlabel('Events')
plt.ylabel('Total Student Participants')
plt.title('Student Participation by Events')
plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better readability

plt.tight_layout()
plt.show()

most_participated_channel = channel_participation.iloc[0]['Events']
print(f"The Events that brings in the most student participation is: {most_participated_channel}")

"""16)FIND THE NUMBER OF STUDENTS WHO ATTENDED THE EVENTS RELATED TO DATA SCIENCE?"""

data_science_events = df[df['Events'].str.contains('Data Visualization using Power BI', case=False)]
unique_students = data_science_events['Email ID'].nunique()
print(f'Total number of students who attended data science events: {unique_students}')

"""17)THOSE WHO HAVE HIGH CGPA & MORE EXPERIENCE IN LANGUAGE THOSE WHO HAD HIGH EXPECTATIONS FOR SALARY?

"""

# Line plot between CGPA and Expected salary (Lac)
plt.figure(figsize=(10, 6))
sns.lineplot(x='CGPA', y='Expected salary (Lac)', data=df)
plt.xlabel('CGPA')
plt.ylabel('Expected salary (Lac)')
plt.title('Relationship between CGPA and Expected salary (Lac) using Line Plot')
plt.show()

# Box plot between Experience with python (Months) and Expected salary (Lac)
plt.figure(figsize=(10, 6))
sns.boxplot(x='Experience with python (Months)', y='Expected salary (Lac)', data=df)
plt.xlabel('Experience with python (Months)')
plt.ylabel('Expected salary (Lac)')
plt.title('Relationship between Experience with python (Months) and Expected salary (Lac) using Box Plot')
plt.show()

"""18)HOW MANY STUDENTS KNOW ABOUT THE EVENT FROM THEIR COLLEGES?WHICH OF THESE TOP 5 COLLEGES?"""

college_students = df[
    df['How did you come to know about this event?'].str.contains('college', case=False, na=False) |
    df['Specify in "Others" (how did you come to know about this event)'].str.contains('college', case=False, na=False)
]

num_students_from_college = college_students['Email ID'].nunique()
print(f"Number of students who learned about the event from their colleges: {num_students_from_college}")
college_sources = df[df['How did you come to know about this event?'].str.contains('college', case=False, na=False)]['How did you come to know about this event?']
top_college_sources = college_sources.value_counts().head(5)

print("\nTop 5 colleges in which the students learned about the event in college ':")
print(top_college_sources)