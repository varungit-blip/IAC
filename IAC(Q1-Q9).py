# -*- coding: utf-8 -*-
"""IAC.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14DHOZ1lrH-uRlYKueWM8TohrYAOjeyyI
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_excel('DAD.xlsx')

"""Q1) How many unique students are included in dataset"""

print(df[['First Name','Email ID']].nunique())

"""What is average GPA of students"""

average=df['CGPA'].mean()
print(f'Average CGPA is {average}')

"""3) What is distribution of students across different graduation years?"""

graduation_years = df['Year of Graduation']


year_counts = graduation_years.value_counts().reset_index()
year_counts.columns = ['Year of Graduation', 'Count']
year_counts = year_counts.sort_values(by='Year of Graduation')


plt.figure(figsize=(10, 6))
plt.bar(year_counts['Year of Graduation'], year_counts['Count'])
plt.xlabel('Year of Graduation')
plt.ylabel('Number of Students')
plt.title('Distribution of Students Across Graduation Years')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

"""4) what is didtribtion of student experience with python programming?"""

python_experience = df['Experience with python (Months)']
experience_counts = python_experience.value_counts().reset_index()
experience_counts.columns = ['Experience_Level', 'Count']
experience_counts = experience_counts.sort_values(by='Experience_Level')

plt.figure(figsize=(10, 6))
plt.bar(experience_counts['Experience_Level'], experience_counts['Count'])
plt.xlabel('Python Experience Level')
plt.ylabel('Number of Students')
plt.title('Distribution of Students\' Python Experience Levels')
plt.tight_layout()
plt.show()

"""5)What is the average of family income of students?"""

income_mapping = {
    '0-2 Lakh': 1,      # Midpoint of 0-2 Lakh
    '2-5 Lakh': 3.5,    # Midpoint of 2-5 Lakh
    '5-7 Lakh': 6,      # Midpoint of 5-7 Lakh
    '7 Lakh+': 8,       # Assuming an average value for 7 Lakh and above
}

df['Family Income Numerical'] = df['Family Income'].map(income_mapping)
average_income = df['Family Income Numerical'].mean()

print(f'The average of family income is: {average_income} Lakhs')

"""6)How does CGPA Vary among diggerent colleges?"""

college_cgpa_data = df[['College Name', 'CGPA']]
college_avg_cgpa = college_cgpa_data.groupby('College Name')['CGPA'].mean().reset_index()

top_five_colleges = college_avg_cgpa.sort_values(by='CGPA', ascending=False).head(5)

plt.figure(figsize=(8,4))
plt.bar(top_five_colleges['College Name'], top_five_colleges['CGPA'])
plt.xlabel('College Name')
plt.ylabel('Average CGPA')
plt.title('Average CGPA Among Top 5 Colleges')
plt.tight_layout()
plt.show()

"""8)What is average GPA of stdents from each city?"""

grouped_data = df.groupby('City')
column_name = 'CGPA'

for city, city_group in grouped_data:
    city_average = city_group[column_name].mean()
    print(f'Average {column_name} in {city}: {city_average}')

"""9)Can we find any relationship between family income and GPA?"""

income_group_cgpa = df.groupby('Family Income')['CGPA'].mean().reset_index()
income_group_cgpa['Income_Order'] = income_group_cgpa['Family Income'].map(income_mapping)
income_group_cgpa = income_group_cgpa.sort_values(by='Income_Order')


print("Average CGPA by Family Income Category:")
display(income_group_cgpa[['Family Income', 'CGPA']])

plt.figure(figsize=(8, 6))
sns.barplot(x='Family Income', y='CGPA', data=income_group_cgpa, order=income_group_cgpa['Family Income'])
plt.xlabel('Family Income')
plt.ylabel('Average CGPA')
plt.title('Average CGPA by Family Income Category')
plt.show()